#!/usr/bin/env perl

# i3-file-picker --- a basic file chooser implementation for dmenu

# Copyright (C) 2024 Daniel Hennigar

# Author: Daniel Hennigar

# This program is free software; you can redistribute it and/or modify
# it under the terms of either:

#   a) the Artistic License 2.0, or
#   b) the GNU General Public License as published by the Free Software
#      Foundation; either version 3, or (at your option) any later version.

# See the LICENSE file for more information.

use 5.040;
use Carp;
use Getopt::Std;
use Pod::Usage;
use English qw(-no_match_vars);
use File::Spec;
use Cwd;
use IPC::Open2;

sub VERSION {
    return $i3::Utils::VERSION;
}

my $picker_cmd  = 'dmenu -i';
my $show_hidden = 0;

my %opts;
getopts( 'hd:s', \%opts ) or pod2usage(2);
if ( $opts{h} ) {
    pod2usage();
    exit 0;
}
if ( $opts{d} ) {
    $picker_cmd = $opts{d};
}
if ( $opts{s} ) {
    $show_hidden = 1;
}

sub run_picker {
    my @options = @_;
    if ( not @options ) { carp 'No options'; return 0 }

    my ( $picker_out, $picker_in );
    my $pid = open2( $picker_out, $picker_in, $picker_cmd )
      or croak "Failed to open picker: $OS_ERROR";

    print {$picker_in} join "\n", @options
      or croak 'Could not send to picker';
    close $picker_in or croak 'Could not close file handle';

    my $selection = <$picker_out>;
    close $picker_out or croak 'Could not close file handle';
    waitpid $pid, 0;

    if ($selection) { chomp $selection }
    return $selection;
}

my $current_dir = $ENV{HOME}
  or croak 'HOME environment variable not set.';

while (1) {

    opendir my $dh, $current_dir
      or croak "Failed to open directory '$current_dir': $OS_ERROR";
    my @entries = sort readdir $dh;
    closedir $dh;

    @entries = grep { /^[.]{1,2}$|^[^.]/xms || $show_hidden } @entries;

    @entries =
      map { -d File::Spec->catfile( $current_dir, $_ ) ? "$_/" : $_ } @entries;

    my $choice = run_picker(@entries);
    last if ( not defined $choice );

    my $is_directory = ( $choice =~ s{/$}{}xms );

    if ($is_directory) {

        $current_dir = File::Spec->catfile( $current_dir, $choice );
        $current_dir = Cwd::abs_path($current_dir)
          or croak "Failed to resolve path: $OS_ERROR";
    }
    else {
        my $file_path = File::Spec->catfile( $current_dir, $choice );
        system( 'xdg-open', $file_path ) == 0
          or carp "Failed to open file '$file_path': $OS_ERROR";
        last;
    }
}

__END__

=pod

=head1 NAME

i3-file-picker - use dmenu (or equivalent) as a simple file explorer

=head1 USAGE

  i3-new-workspace [OPTIONS]

=head1 DESCRIPTION

Use dmenu, or a compatible menu program like rofi, as a simple file picker starting in the user's $HOME directory. Once a file is chosen, it will be opened with xdg-open.

=head1 OPTIONS

=over 4

=item * --help

=item * --show-hidden - show hidden files begining with "."

=item * --dmenu-command '<command>' - specify an alternative to dmenu (e.g., 'fuzzel -d')

=back

=head1 AUTHOR

Daniel Hennigar

=head1 LICENSE AND COPYRIGHT

Copyright (C) 2025 Daniel Hennigar

Licensed under the Artistic License 2.0 and GNU GPL.

=cut

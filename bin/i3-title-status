#!/usr/bin/perl

# i3-title-status.pl --- print status info in the focused window title bar

# Copyright (c) 2024 Daniel Hennigar

# This program is free software; you can redistribute it and/or modify
# it under the terms of either:
#
#   a) the Artistic License 2.0, or
#   b) the GNU General Public License as published by the Free Software
#      Foundation; either version 3, or (at your option) any later version.
#
# See the LICENSE file for more information.

use 5.040;
use strict;
use warnings;
use Getopt::Long;
use AnyEvent::I3;

my $usage = "Usage: $0 [--help] [--format '<format string>']
See 'perldoc $0' for documentation.";
my $format          = '[%clock][%date][%battery_charge% %battery_status] %title';
my $help            = 0;
my $window_warning  = 0;
my $battery_was_low = 0;

GetOptions(
    'help'    => \$help,
    'format'  => \$format,
    'warning' => \$window_warning
) or die "$usage";
die "$usage" if $help;

my $i3 = i3();
$i3->connect->recv or die "Error connecting to i3.";
say "Connected to i3.";

sub update_and_send_commands {
    chomp( my $clock          = qx(date "+%H:%M") );
    chomp( my $date           = qx(date "+%d-%h-%Y"));
    chomp( my $battery_charge = qx(cat /sys/class/power_supply/BAT0/capacity) );
    chomp( my $battery_status = qx(cat /sys/class/power_supply/BAT0/status) );

    my %battery_symbols = (
        "Discharging" => "-",
        "Charging"    => "+"
    );
    my $battery_symbol = $battery_symbols{$battery_status} // "";

    my $status = $format;
    $status =~ s/%clock/$clock/g;
    $status =~ s/%date/$date/g;
    $status =~ s/%battery_charge/$battery_charge/g;
    $status =~ s/%battery_status/$battery_status/g;
    $status =~ s/%battery_symbol/$battery_symbol/g;

    say "Updating title status.";
    $i3->command("[workspace=__focused__] title_format \"%title\"; title_format $status");

    # change the window border color based on battery status
    if ($window_warning) {
	if (int($battery_charge) <= 15 && $battery_status eq "Discharging") {
	    if (!$battery_was_low) {
		say "Battery low.";
		$battery_was_low = 1;
		$i3->command(
		    "client.focused \"#FF0000\" \"#FF0000\" \"#FFFFFF\" \"#FF0000\" "
		);
	    }
	} else {
	    if ($battery_was_low) {
		say "Battery no longer low.";
		$battery_was_low = 0;
		$i3->command(
		    "client.focused \"#3660d0\" \"#3660d0\" \"#FFFFFF\" \"#4670e0\" "
		);
	    }
	}
    }
}

$i3->subscribe(
    {
        window => sub {
            my $event = shift;
            if ( $event->{change} eq 'focus' ) {
                say "Window focus event detected.";
                update_and_send_commands();
            }
        },
	tick => sub {
	    my ($event) = shift;
	    if ( $event->{first} ) {
		return;
	    }
	    if ( $event->{payload} =~ /battery_event:/) {
		update_and_send_commands();
	    }
	}
    }
)->recv->{success} or die "Error subscribing to window events.";

$i3->subscribe(
    {
        shutdown => sub {
            say "Shutting down.";
            exit(0);
        },
        _error => sub {
            my ($msg) = @_;
            say "Error: $msg";
            exit(1);
        }
    }
)->recv;

my $timer;
$timer = AnyEvent->timer(
    after    => 60,
    interval => 60,
    cb       => sub {
        say "60 seconds passed.";
        update_and_send_commands();
    }
);

AE::cv->recv

__END__

=pod

=head1 NAME

i3-title-status - Print system information to the focused window's title bar

=head1 SYNOPSIS

  i3-title-status [--format '<format string>'] [--help]

=head1 DESCRIPTION

Prints system status information into the title bar of the currently focused window.
Updates on window focus events and every 60 seconds. Closes if the connection to i3 is lost.

=head1 OPTIONS

=over 4

=item * --help

=item * --format

Specify a custom format for the status information. Valid substitutions are:

=over 4

=item * %title

=item * %clock

=item * %battery_level

=item * %battery_status

=item * %battery_symbol

=back

=back

=head1 AUTHOR

Daniel Hennigar

=head1 LICENSE

Licensed under the Artistic License 2.0 and GNU GPL.

=cut
